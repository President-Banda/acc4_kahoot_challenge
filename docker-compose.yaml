version: '3'

services:
  backend:
    container_name: django_backend
    build:
      context: ./backend_api
      dockerfile: django.Dockerfile
    command: >
      sh -c "python manage.py makemigrations authentication &&
            python manage.py makemigrations && 
            python manage.py migrate &&
            gunicorn api_core.wsgi:application --bind 0.0.0.0:8000"
    ports:
      - "8000:8000"
    volumes:
      - ./static:/django_web/static
    depends_on:
      - postgres

  #PostgreSQL container
  postgres:
    container_name: postgres
    image: postgres #Using the official docker image for postgresql
    volumes: 
      - pg_data:/var/lib/postgresql/data/
    environment: 
      - POSTGRES_DB=kahoot_db
      - POSTGRES_USER=kahoot
      - POSTGRES_PASSWORD=SuperSecret
      - PGDATA:/var/lib/postgresql/data
  
  #pgadmin container
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:6
    restart: always
    environment:  
      - PGADMIN_DEFAULT_EMAIL=tech_club@azubiafrica.org
      - PGADMIN_DEFAULT_PASSWORD=secret1234
      - PGADMIN_LISTEN_PORT=5050
    ports:
      - 5050:5050
    links:
      - postgres
    depends_on:
      - postgres

  # frontend:
  #   container_name: react_frontend
  #   build:
  #     context: ./kahoot_frontend
  #     dockerfile: frontend.Dockerfile
  #   ports:
  #     - 3000:3000
  #   stdin_open: true
  #   command: npm start
    
  #still working on this service, it's requied for production  
  nginx:
    container_name: nginx
    image: nginx:1.20
    ports:
      - "80:8080"
    volumes:
      - ./nginx/nginx-setup.conf:/etc/nginx/conf.d/default.conf:ro
      - ./frontend_volume:/var/www/kahoot_frontend/build
    # depends_on:
      # - backend
      # - frontend

volumes:
  # frontend_volume:
  pg_data: